package org.llvm.dwarf.encoding

object Tag extends Enumeration {
  type Tag = Value

  val array_type: Tag = Value(0x01)
  val class_type: Tag = Value(0x02)
  val entry_point: Tag = Value(0x03)
  val enumeration_type: Tag = Value(0x04)
  val formal_parameter: Tag = Value(0x05)
//  Reserved 0x06
//  Reserved 0x07
  val imported_declaration: Tag = Value(0x08)
//  Reserved 0x09
  val label: Tag = Value(0x0a)
  val lexical_block: Tag = Value(0x0b)
//  Reserved 0x0c
  val member: Tag = Value(0x0d)
//  Reserved 0x0e
  val pointer_type: Tag = Value(0x0f)
  val reference_type: Tag = Value(0x10)
  val compile_unit: Tag = Value(0x11)
  val string_type: Tag = Value(0x12)
  val structure_type: Tag = Value(0x13)
//  Reserved 0x14
  val subroutine_type: Tag = Value(0x15)
  val typedef: Tag = Value(0x16)
  val union_type: Tag = Value(0x17)
  val unspecified_parameters: Tag = Value(0x18)
  val variant: Tag = Value(0x19)
  val common_block: Tag = Value(0x1a)
  val common_inclusion: Tag = Value(0x1b)
  val inheritance: Tag = Value(0x1c)
  val inlined_subroutine: Tag = Value(0x1d)
  val module: Tag = Value(0x1e)
  val ptr_to_member_type: Tag = Value(0x1f)
  val set_type: Tag = Value(0x20)
  val subrange_type: Tag = Value(0x21)
  val with_stmt: Tag = Value(0x22)
  val access_declaration: Tag = Value(0x23)
  val base_type: Tag = Value(0x24)
  val catch_block: Tag = Value(0x25)
  val const_type: Tag = Value(0x26)
  val constant: Tag = Value(0x27)
  val enumerator: Tag = Value(0x28)
  val file_type: Tag = Value(0x29)
  val friend: Tag = Value(0x2a)
  val namelist: Tag = Value(0x2b)
  val namelist_item: Tag = Value(0x2c)
  val packed_type: Tag = Value(0x2d)
  val subprogram: Tag = Value(0x2e)
  val template_type_parameter: Tag = Value(0x2f)
  val template_value_parameter: Tag = Value(0x30)
  val thrown_type: Tag = Value(0x31)
  val try_block: Tag = Value(0x32)
  val variant_part: Tag = Value(0x33)
  val variable: Tag = Value(0x34)
  val volatile_type: Tag = Value(0x35)
  val dwarf_procedure: Tag = Value(0x36)
  val restrict_type: Tag = Value(0x37)
  val interface_type: Tag = Value(0x38)
  val namespace: Tag = Value(0x39)
  val imported_module: Tag = Value(0x3a)
  val unspecified_type: Tag = Value(0x3b)
  val partial_unit: Tag = Value(0x3c)
  val imported_unit: Tag = Value(0x3d)
//  Reserved 0x3e
  val condition: Tag = Value(0x3f)
  val shared_type: Tag = Value(0x40)
  val type_unit: Tag = Value(0x41)
  val rvalue_reference_type: Tag = Value(0x42)
  val template_alias: Tag = Value(0x43)
  val coarray_type: Tag = Value(0x44)
  val generic_subrange: Tag = Value(0x45)
  val dynamic_type: Tag = Value(0x46)
  val atomic_type: Tag = Value(0x47)
  val call_site: Tag = Value(0x48)
  val call_site_parameter: Tag = Value(0x49)
  val skeleton_unit: Tag = Value(0x4a)
  val immutable_type: Tag = Value(0x4b)
  val lo_user: Tag = Value(0x4080)
  val hi_user: Tag = Value(0xffff)
}
